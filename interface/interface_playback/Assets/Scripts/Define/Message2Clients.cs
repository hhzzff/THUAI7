// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message2Clients.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protobuf
{

  /// <summary>Holder for reflection information generated from Message2Clients.proto</summary>
  public static partial class Message2ClientsReflection
  {

    #region Descriptor
    /// <summary>File descriptor for Message2Clients.proto</summary>
    public static pbr::FileDescriptor Descriptor
    {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Message2ClientsReflection()
    {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVNZXNzYWdlMkNsaWVudHMucHJvdG8SCHByb3RvYnVmGhFNZXNzYWdlVHlw",
            "ZS5wcm90byLyAwoNTWVzc2FnZU9mU2hpcBIJCgF4GAEgASgFEgkKAXkYAiAB",
            "KAUSDQoFc3BlZWQYAyABKAUSCgoCaHAYBCABKAUSDQoFYXJtb3IYBSABKAUS",
            "DgoGc2hpZWxkGAYgASgFEg8KB3RlYW1faWQYByABKAMSEQoJcGxheWVyX2lk",
            "GAggASgDEgwKBGd1aWQYCSABKAMSJwoKc2hpcF9zdGF0ZRgKIAEoDjITLnBy",
            "b3RvYnVmLlNoaXBTdGF0ZRIlCglzaGlwX3R5cGUYCyABKA4yEi5wcm90b2J1",
            "Zi5TaGlwVHlwZRISCgp2aWV3X3JhbmdlGAwgASgFEi0KDXByb2R1Y2VyX3R5",
            "cGUYDSABKA4yFi5wcm90b2J1Zi5Qcm9kdWNlclR5cGUSMwoQY29uc3RydWN0",
            "b3JfdHlwZRgOIAEoDjIZLnByb3RvYnVmLkNvbnN0cnVjdG9yVHlwZRInCgph",
            "cm1vcl90eXBlGA8gASgOMhMucHJvdG9idWYuQXJtb3JUeXBlEikKC3NoaWVs",
            "ZF90eXBlGBAgASgOMhQucHJvdG9idWYuU2hpZWxkVHlwZRIpCgt3ZWFwb25f",
            "dHlwZRgRIAEoDjIULnByb3RvYnVmLldlYXBvblR5cGUSGAoQZmFjaW5nX2Rp",
            "cmVjdGlvbhgSIAEoASK3AQoPTWVzc2FnZU9mQnVsbGV0EiIKBHR5cGUYASAB",
            "KA4yFC5wcm90b2J1Zi5CdWxsZXRUeXBlEgkKAXgYAiABKAUSCQoBeRgDIAEo",
            "BRIYChBmYWNpbmdfZGlyZWN0aW9uGAQgASgBEg4KBmRhbWFnZRgFIAEoBRIP",
            "Cgd0ZWFtX2lkGAYgASgDEgwKBGd1aWQYByABKAMSEgoKYm9tYl9yYW5nZRgI",
            "IAEoARINCgVzcGVlZBgJIAEoBSKTAQoVTWVzc2FnZU9mQm9tYmVkQnVsbGV0",
            "EiIKBHR5cGUYASABKA4yFC5wcm90b2J1Zi5CdWxsZXRUeXBlEgkKAXgYAiAB",
            "KAUSCQoBeRgDIAEoBRIYChBmYWNpbmdfZGlyZWN0aW9uGAQgASgBEhIKCm1h",
            "cHBpbmdfaWQYBSABKAMSEgoKYm9tYl9yYW5nZRgGIAEoASJFChBNZXNzYWdl",
            "T2ZGYWN0b3J5EgkKAXgYASABKAUSCQoBeRgCIAEoBRIKCgJocBgDIAEoBRIP",
            "Cgd0ZWFtX2lkGAQgASgDIkcKEk1lc3NhZ2VPZkNvbW11bml0eRIJCgF4GAEg",
            "ASgFEgkKAXkYAiABKAUSCgoCaHAYAyABKAUSDwoHdGVhbV9pZBgEIAEoAyJC",
            "Cg1NZXNzYWdlT2ZGb3J0EgkKAXgYASABKAUSCQoBeRgCIAEoBRIKCgJocBgD",
            "IAEoBRIPCgd0ZWFtX2lkGAQgASgDIkEKEU1lc3NhZ2VPZldvcm1ob2xlEgkK",
            "AXgYASABKAUSCQoBeRgCIAEoBRIKCgJocBgDIAEoBRIKCgJpZBgEIAEoBSI7",
            "ChFNZXNzYWdlT2ZSZXNvdXJjZRIJCgF4GAEgASgFEgkKAXkYAiABKAUSEAoI",
            "cHJvZ3Jlc3MYAyABKAUiQgoNTWVzc2FnZU9mSG9tZRIJCgF4GAEgASgFEgkK",
            "AXkYAiABKAUSCgoCaHAYAyABKAUSDwoHdGVhbV9pZBgEIAEoAyKBAQoMTWVz",
            "c2FnZU9mTWFwEg4KBmhlaWdodBgBIAEoDRINCgV3aWR0aBgCIAEoDRIoCgRy",
            "b3dzGAMgAygLMhoucHJvdG9idWYuTWVzc2FnZU9mTWFwLlJvdxooCgNSb3cS",
            "IQoEY29scxgBIAMoDjITLnByb3RvYnVmLlBsYWNlVHlwZSJSCg1NZXNzYWdl",
            "T2ZUZWFtEg8KB3RlYW1faWQYASABKAMSEQoJcGxheWVyX2lkGAIgASgDEg0K",
            "BXNjb3JlGAMgASgDEg4KBmVuZXJneRgEIAEoAyKfBQoMTWVzc2FnZU9mT2Jq",
            "Ei8KDHNoaXBfbWVzc2FnZRgBIAEoCzIXLnByb3RvYnVmLk1lc3NhZ2VPZlNo",
            "aXBIABIzCg5idWxsZXRfbWVzc2FnZRgCIAEoCzIZLnByb3RvYnVmLk1lc3Nh",
            "Z2VPZkJ1bGxldEgAEjUKD2ZhY3RvcnlfbWVzc2FnZRgDIAEoCzIaLnByb3Rv",
            "YnVmLk1lc3NhZ2VPZkZhY3RvcnlIABI5ChFjb21tdW5pdHlfbWVzc2FnZRgE",
            "IAEoCzIcLnByb3RvYnVmLk1lc3NhZ2VPZkNvbW11bml0eUgAEi8KDGZvcnRf",
            "bWVzc2FnZRgFIAEoCzIXLnByb3RvYnVmLk1lc3NhZ2VPZkZvcnRIABI3ChB3",
            "b3JtaG9sZV9tZXNzYWdlGAYgASgLMhsucHJvdG9idWYuTWVzc2FnZU9mV29y",
            "bWhvbGVIABIvCgxob21lX21lc3NhZ2UYByABKAsyFy5wcm90b2J1Zi5NZXNz",
            "YWdlT2ZIb21lSAASNwoQcmVzb3VyY2VfbWVzc2FnZRgIIAEoCzIbLnByb3Rv",
            "YnVmLk1lc3NhZ2VPZlJlc291cmNlSAASLQoLbWFwX21lc3NhZ2UYCSABKAsy",
            "Fi5wcm90b2J1Zi5NZXNzYWdlT2ZNYXBIABIvCgxuZXdzX21lc3NhZ2UYCiAB",
            "KAsyFy5wcm90b2J1Zi5NZXNzYWdlT2ZOZXdzSAASQAoVYm9tYmVkX2J1bGxl",
            "dF9tZXNzYWdlGAsgASgLMh8ucHJvdG9idWYuTWVzc2FnZU9mQm9tYmVkQnVs",
            "bGV0SAASLwoMdGVhbV9tZXNzYWdlGAwgASgLMhcucHJvdG9idWYuTWVzc2Fn",
            "ZU9mVGVhbUgAQhAKDm1lc3NhZ2Vfb2Zfb2JqIrABCgxNZXNzYWdlT2ZBbGwS",
            "EQoJZ2FtZV90aW1lGAEgASgFEhYKDnJlZF90ZWFtX3Njb3JlGAIgASgFEhcK",
            "D2JsdWVfdGVhbV9zY29yZRgDIAEoBRIXCg9yZWRfdGVhbV9lbmVyZ3kYBCAB",
            "KAUSGAoQYmx1ZV90ZWFtX2VuZXJneRgFIAEoBRITCgtyZWRfaG9tZV9ocBgG",
            "IAEoBRIUCgxibHVlX2hvbWVfaHAYByABKAUilAEKD01lc3NhZ2VUb0NsaWVu",
            "dBIrCgtvYmpfbWVzc2FnZRgBIAMoCzIWLnByb3RvYnVmLk1lc3NhZ2VPZk9i",
            "ahInCgpnYW1lX3N0YXRlGAIgASgOMhMucHJvdG9idWYuR2FtZVN0YXRlEisK",
            "C2FsbF9tZXNzYWdlGAMgASgLMhYucHJvdG9idWYuTWVzc2FnZU9mQWxsIkoK",
            "B01vdmVSZXMSFAoMYWN0dWFsX3NwZWVkGAEgASgDEhQKDGFjdHVhbF9hbmds",
            "ZRgCIAEoARITCgthY3Rfc3VjY2VzcxgDIAEoCCI2CgxCdWlsZFNoaXBSZXMS",
            "EwoLYWN0X3N1Y2Nlc3MYASABKAgSEQoJcGxheWVyX2lkGAIgASgDIh4KB0Jv",
            "b2xSZXMSEwoLYWN0X3N1Y2Nlc3MYASABKAgiOQoLU2hpcEluZm9SZXMSKgoJ",
            "c2hpcF9pbmZvGAEgAygLMhcucHJvdG9idWYuTWVzc2FnZU9mU2hpcCIZCgZF",
            "Y29SZXMSDwoHZWNvbm9teRgBIAEoAyJ6Cg1NZXNzYWdlT2ZOZXdzEhYKDHRl",
            "eHRfbWVzc2FnZRgBIAEoCUgAEhgKDmJpbmFyeV9tZXNzYWdlGAIgASgMSAAS",
            "DwoHZnJvbV9pZBgDIAEoAxINCgV0b19pZBgEIAEoAxIPCgd0ZWFtX2lkGAUg",
            "ASgDQgYKBG5ld3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protobuf.MessageTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfShip), global::Protobuf.MessageOfShip.Parser, new[]{ "X", "Y", "Speed", "Hp", "Armor", "Shield", "TeamId", "PlayerId", "Guid", "ShipState", "ShipType", "ViewRange", "ProducerType", "ConstructorType", "ArmorType", "ShieldType", "WeaponType", "FacingDirection" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfBullet), global::Protobuf.MessageOfBullet.Parser, new[]{ "Type", "X", "Y", "FacingDirection", "Damage", "TeamId", "Guid", "BombRange", "Speed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfBombedBullet), global::Protobuf.MessageOfBombedBullet.Parser, new[]{ "Type", "X", "Y", "FacingDirection", "MappingId", "BombRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfFactory), global::Protobuf.MessageOfFactory.Parser, new[]{ "X", "Y", "Hp", "TeamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfCommunity), global::Protobuf.MessageOfCommunity.Parser, new[]{ "X", "Y", "Hp", "TeamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfFort), global::Protobuf.MessageOfFort.Parser, new[]{ "X", "Y", "Hp", "TeamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfWormhole), global::Protobuf.MessageOfWormhole.Parser, new[]{ "X", "Y", "Hp", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfResource), global::Protobuf.MessageOfResource.Parser, new[]{ "X", "Y", "Progress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfHome), global::Protobuf.MessageOfHome.Parser, new[]{ "X", "Y", "Hp", "TeamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfMap), global::Protobuf.MessageOfMap.Parser, new[]{ "Height", "Width", "Rows" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfMap.Types.Row), global::Protobuf.MessageOfMap.Types.Row.Parser, new[]{ "Cols" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfTeam), global::Protobuf.MessageOfTeam.Parser, new[]{ "TeamId", "PlayerId", "Score", "Energy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfObj), global::Protobuf.MessageOfObj.Parser, new[]{ "ShipMessage", "BulletMessage", "FactoryMessage", "CommunityMessage", "FortMessage", "WormholeMessage", "HomeMessage", "ResourceMessage", "MapMessage", "NewsMessage", "BombedBulletMessage", "TeamMessage" }, new[]{ "MessageOfObj" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfAll), global::Protobuf.MessageOfAll.Parser, new[]{ "GameTime", "RedTeamScore", "BlueTeamScore", "RedTeamEnergy", "BlueTeamEnergy", "RedHomeHp", "BlueHomeHp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageToClient), global::Protobuf.MessageToClient.Parser, new[]{ "ObjMessage", "GameState", "AllMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MoveRes), global::Protobuf.MoveRes.Parser, new[]{ "ActualSpeed", "ActualAngle", "ActSuccess" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BuildShipRes), global::Protobuf.BuildShipRes.Parser, new[]{ "ActSuccess", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.BoolRes), global::Protobuf.BoolRes.Parser, new[]{ "ActSuccess" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.ShipInfoRes), global::Protobuf.ShipInfoRes.Parser, new[]{ "ShipInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.EcoRes), global::Protobuf.EcoRes.Parser, new[]{ "Economy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protobuf.MessageOfNews), global::Protobuf.MessageOfNews.Parser, new[]{ "TextMessage", "BinaryMessage", "FromId", "ToId", "TeamId" }, new[]{ "News" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MessageOfShip : pb::IMessage<MessageOfShip>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfShip> _parser = new pb::MessageParser<MessageOfShip>(() => new MessageOfShip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfShip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfShip()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfShip(MessageOfShip other) : this()
    {
      x_ = other.x_;
      y_ = other.y_;
      speed_ = other.speed_;
      hp_ = other.hp_;
      armor_ = other.armor_;
      shield_ = other.shield_;
      teamId_ = other.teamId_;
      playerId_ = other.playerId_;
      guid_ = other.guid_;
      shipState_ = other.shipState_;
      shipType_ = other.shipType_;
      viewRange_ = other.viewRange_;
      producerType_ = other.producerType_;
      constructorType_ = other.constructorType_;
      armorType_ = other.armorType_;
      shieldType_ = other.shieldType_;
      weaponType_ = other.weaponType_;
      facingDirection_ = other.facingDirection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfShip Clone()
    {
      return new MessageOfShip(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 3;
    private int speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Speed
    {
      get { return speed_; }
      set
      {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 4;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp
    {
      get { return hp_; }
      set
      {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "armor" field.</summary>
    public const int ArmorFieldNumber = 5;
    private int armor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Armor
    {
      get { return armor_; }
      set
      {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "shield" field.</summary>
    public const int ShieldFieldNumber = 6;
    private int shield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Shield
    {
      get { return shield_; }
      set
      {
        shield_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 7;
    private long teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId
    {
      get { return teamId_; }
      set
      {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 8;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId
    {
      get { return playerId_; }
      set
      {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 9;
    private long guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Guid
    {
      get { return guid_; }
      set
      {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "ship_state" field.</summary>
    public const int ShipStateFieldNumber = 10;
    private global::Protobuf.ShipState shipState_ = global::Protobuf.ShipState.NullStatus;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShipState ShipState
    {
      get { return shipState_; }
      set
      {
        shipState_ = value;
      }
    }

    /// <summary>Field number for the "ship_type" field.</summary>
    public const int ShipTypeFieldNumber = 11;
    private global::Protobuf.ShipType shipType_ = global::Protobuf.ShipType.NullShipType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShipType ShipType
    {
      get { return shipType_; }
      set
      {
        shipType_ = value;
      }
    }

    /// <summary>Field number for the "view_range" field.</summary>
    public const int ViewRangeFieldNumber = 12;
    private int viewRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ViewRange
    {
      get { return viewRange_; }
      set
      {
        viewRange_ = value;
      }
    }

    /// <summary>Field number for the "producer_type" field.</summary>
    public const int ProducerTypeFieldNumber = 13;
    private global::Protobuf.ProducerType producerType_ = global::Protobuf.ProducerType.NullProducerType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ProducerType ProducerType
    {
      get { return producerType_; }
      set
      {
        producerType_ = value;
      }
    }

    /// <summary>Field number for the "constructor_type" field.</summary>
    public const int ConstructorTypeFieldNumber = 14;
    private global::Protobuf.ConstructorType constructorType_ = global::Protobuf.ConstructorType.NullConstructorType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ConstructorType ConstructorType
    {
      get { return constructorType_; }
      set
      {
        constructorType_ = value;
      }
    }

    /// <summary>Field number for the "armor_type" field.</summary>
    public const int ArmorTypeFieldNumber = 15;
    private global::Protobuf.ArmorType armorType_ = global::Protobuf.ArmorType.NullArmorType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ArmorType ArmorType
    {
      get { return armorType_; }
      set
      {
        armorType_ = value;
      }
    }

    /// <summary>Field number for the "shield_type" field.</summary>
    public const int ShieldTypeFieldNumber = 16;
    private global::Protobuf.ShieldType shieldType_ = global::Protobuf.ShieldType.NullShieldType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.ShieldType ShieldType
    {
      get { return shieldType_; }
      set
      {
        shieldType_ = value;
      }
    }

    /// <summary>Field number for the "weapon_type" field.</summary>
    public const int WeaponTypeFieldNumber = 17;
    private global::Protobuf.WeaponType weaponType_ = global::Protobuf.WeaponType.NullWeaponType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.WeaponType WeaponType
    {
      get { return weaponType_; }
      set
      {
        weaponType_ = value;
      }
    }

    /// <summary>Field number for the "facing_direction" field.</summary>
    public const int FacingDirectionFieldNumber = 18;
    private double facingDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FacingDirection
    {
      get { return facingDirection_; }
      set
      {
        facingDirection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfShip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfShip other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Speed != other.Speed) return false;
      if (Hp != other.Hp) return false;
      if (Armor != other.Armor) return false;
      if (Shield != other.Shield) return false;
      if (TeamId != other.TeamId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Guid != other.Guid) return false;
      if (ShipState != other.ShipState) return false;
      if (ShipType != other.ShipType) return false;
      if (ViewRange != other.ViewRange) return false;
      if (ProducerType != other.ProducerType) return false;
      if (ConstructorType != other.ConstructorType) return false;
      if (ArmorType != other.ArmorType) return false;
      if (ShieldType != other.ShieldType) return false;
      if (WeaponType != other.WeaponType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FacingDirection, other.FacingDirection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Armor != 0) hash ^= Armor.GetHashCode();
      if (Shield != 0) hash ^= Shield.GetHashCode();
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (Guid != 0L) hash ^= Guid.GetHashCode();
      if (ShipState != global::Protobuf.ShipState.NullStatus) hash ^= ShipState.GetHashCode();
      if (ShipType != global::Protobuf.ShipType.NullShipType) hash ^= ShipType.GetHashCode();
      if (ViewRange != 0) hash ^= ViewRange.GetHashCode();
      if (ProducerType != global::Protobuf.ProducerType.NullProducerType) hash ^= ProducerType.GetHashCode();
      if (ConstructorType != global::Protobuf.ConstructorType.NullConstructorType) hash ^= ConstructorType.GetHashCode();
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) hash ^= ArmorType.GetHashCode();
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) hash ^= ShieldType.GetHashCode();
      if (WeaponType != global::Protobuf.WeaponType.NullWeaponType) hash ^= WeaponType.GetHashCode();
      if (FacingDirection != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FacingDirection);
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Speed != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Speed);
      }
      if (Hp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hp);
      }
      if (Armor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Armor);
      }
      if (Shield != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Shield);
      }
      if (TeamId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TeamId);
      }
      if (PlayerId != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(PlayerId);
      }
      if (Guid != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Guid);
      }
      if (ShipState != global::Protobuf.ShipState.NullStatus) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ShipState);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType) {
        output.WriteRawTag(88);
        output.WriteEnum((int) ShipType);
      }
      if (ViewRange != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ViewRange);
      }
      if (ProducerType != global::Protobuf.ProducerType.NullProducerType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) ProducerType);
      }
      if (ConstructorType != global::Protobuf.ConstructorType.NullConstructorType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) ConstructorType);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ArmorType);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) ShieldType);
      }
      if (WeaponType != global::Protobuf.WeaponType.NullWeaponType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) WeaponType);
      }
      if (FacingDirection != 0D) {
        output.WriteRawTag(145, 1);
        output.WriteDouble(FacingDirection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (X != 0)
      {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Speed != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Speed);
      }
      if (Hp != 0)
      {
        output.WriteRawTag(32);
        output.WriteInt32(Hp);
      }
      if (Armor != 0)
      {
        output.WriteRawTag(40);
        output.WriteInt32(Armor);
      }
      if (Shield != 0)
      {
        output.WriteRawTag(48);
        output.WriteInt32(Shield);
      }
      if (TeamId != 0L)
      {
        output.WriteRawTag(56);
        output.WriteInt64(TeamId);
      }
      if (PlayerId != 0L)
      {
        output.WriteRawTag(64);
        output.WriteInt64(PlayerId);
      }
      if (Guid != 0L)
      {
        output.WriteRawTag(72);
        output.WriteInt64(Guid);
      }
      if (ShipState != global::Protobuf.ShipState.NullStatus)
      {
        output.WriteRawTag(80);
        output.WriteEnum((int)ShipState);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType)
      {
        output.WriteRawTag(88);
        output.WriteEnum((int)ShipType);
      }
      if (ViewRange != 0)
      {
        output.WriteRawTag(96);
        output.WriteInt32(ViewRange);
      }
      if (ProducerType != global::Protobuf.ProducerType.NullProducerType)
      {
        output.WriteRawTag(104);
        output.WriteEnum((int)ProducerType);
      }
      if (ConstructorType != global::Protobuf.ConstructorType.NullConstructorType)
      {
        output.WriteRawTag(112);
        output.WriteEnum((int)ConstructorType);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType)
      {
        output.WriteRawTag(120);
        output.WriteEnum((int)ArmorType);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType)
      {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int)ShieldType);
      }
      if (WeaponType != global::Protobuf.WeaponType.NullWeaponType)
      {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int)WeaponType);
      }
      if (FacingDirection != 0D)
      {
        output.WriteRawTag(145, 1);
        output.WriteDouble(FacingDirection);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Speed != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (Hp != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Armor != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Armor);
      }
      if (Shield != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Shield);
      }
      if (TeamId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (PlayerId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (Guid != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Guid);
      }
      if (ShipState != global::Protobuf.ShipState.NullStatus)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)ShipState);
      }
      if (ShipType != global::Protobuf.ShipType.NullShipType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)ShipType);
      }
      if (ViewRange != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewRange);
      }
      if (ProducerType != global::Protobuf.ProducerType.NullProducerType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)ProducerType);
      }
      if (ConstructorType != global::Protobuf.ConstructorType.NullConstructorType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)ConstructorType);
      }
      if (ArmorType != global::Protobuf.ArmorType.NullArmorType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)ArmorType);
      }
      if (ShieldType != global::Protobuf.ShieldType.NullShieldType)
      {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int)ShieldType);
      }
      if (WeaponType != global::Protobuf.WeaponType.NullWeaponType)
      {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int)WeaponType);
      }
      if (FacingDirection != 0D)
      {
        size += 2 + 8;
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfShip other)
    {
      if (other == null)
      {
        return;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.Speed != 0)
      {
        Speed = other.Speed;
      }
      if (other.Hp != 0)
      {
        Hp = other.Hp;
      }
      if (other.Armor != 0)
      {
        Armor = other.Armor;
      }
      if (other.Shield != 0)
      {
        Shield = other.Shield;
      }
      if (other.TeamId != 0L)
      {
        TeamId = other.TeamId;
      }
      if (other.PlayerId != 0L)
      {
        PlayerId = other.PlayerId;
      }
      if (other.Guid != 0L)
      {
        Guid = other.Guid;
      }
      if (other.ShipState != global::Protobuf.ShipState.NullStatus)
      {
        ShipState = other.ShipState;
      }
      if (other.ShipType != global::Protobuf.ShipType.NullShipType)
      {
        ShipType = other.ShipType;
      }
      if (other.ViewRange != 0)
      {
        ViewRange = other.ViewRange;
      }
      if (other.ProducerType != global::Protobuf.ProducerType.NullProducerType)
      {
        ProducerType = other.ProducerType;
      }
      if (other.ConstructorType != global::Protobuf.ConstructorType.NullConstructorType)
      {
        ConstructorType = other.ConstructorType;
      }
      if (other.ArmorType != global::Protobuf.ArmorType.NullArmorType)
      {
        ArmorType = other.ArmorType;
      }
      if (other.ShieldType != global::Protobuf.ShieldType.NullShieldType)
      {
        ShieldType = other.ShieldType;
      }
      if (other.WeaponType != global::Protobuf.WeaponType.NullWeaponType)
      {
        WeaponType = other.WeaponType;
      }
      if (other.FacingDirection != 0D)
      {
        FacingDirection = other.FacingDirection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Speed = input.ReadInt32();
            break;
          }
          case 32: {
            Hp = input.ReadInt32();
            break;
          }
          case 40: {
            Armor = input.ReadInt32();
            break;
          }
          case 48: {
            Shield = input.ReadInt32();
            break;
          }
          case 56: {
            TeamId = input.ReadInt64();
            break;
          }
          case 64: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 72: {
            Guid = input.ReadInt64();
            break;
          }
          case 80: {
            ShipState = (global::Protobuf.ShipState) input.ReadEnum();
            break;
          }
          case 88: {
            ShipType = (global::Protobuf.ShipType) input.ReadEnum();
            break;
          }
          case 96: {
            ViewRange = input.ReadInt32();
            break;
          }
          case 104: {
            ProducerType = (global::Protobuf.ProducerType) input.ReadEnum();
            break;
          }
          case 112: {
            ConstructorType = (global::Protobuf.ConstructorType) input.ReadEnum();
            break;
          }
          case 120: {
            ArmorType = (global::Protobuf.ArmorType) input.ReadEnum();
            break;
          }
          case 128: {
            ShieldType = (global::Protobuf.ShieldType) input.ReadEnum();
            break;
          }
          case 136: {
            WeaponType = (global::Protobuf.WeaponType) input.ReadEnum();
            break;
          }
          case 145: {
            FacingDirection = input.ReadDouble();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              X = input.ReadInt32();
              break;
            }
          case 16:
            {
              Y = input.ReadInt32();
              break;
            }
          case 24:
            {
              Speed = input.ReadInt32();
              break;
            }
          case 32:
            {
              Hp = input.ReadInt32();
              break;
            }
          case 40:
            {
              Armor = input.ReadInt32();
              break;
            }
          case 48:
            {
              Shield = input.ReadInt32();
              break;
            }
          case 56:
            {
              TeamId = input.ReadInt64();
              break;
            }
          case 64:
            {
              PlayerId = input.ReadInt64();
              break;
            }
          case 72:
            {
              Guid = input.ReadInt64();
              break;
            }
          case 80:
            {
              ShipState = (global::Protobuf.ShipState)input.ReadEnum();
              break;
            }
          case 88:
            {
              ShipType = (global::Protobuf.ShipType)input.ReadEnum();
              break;
            }
          case 96:
            {
              ViewRange = input.ReadInt32();
              break;
            }
          case 104:
            {
              ProducerType = (global::Protobuf.ProducerType)input.ReadEnum();
              break;
            }
          case 112:
            {
              ConstructorType = (global::Protobuf.ConstructorType)input.ReadEnum();
              break;
            }
          case 120:
            {
              ArmorType = (global::Protobuf.ArmorType)input.ReadEnum();
              break;
            }
          case 128:
            {
              ShieldType = (global::Protobuf.ShieldType)input.ReadEnum();
              break;
            }
          case 136:
            {
              WeaponType = (global::Protobuf.WeaponType)input.ReadEnum();
              break;
            }
          case 145:
            {
              FacingDirection = input.ReadDouble();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfBullet : pb::IMessage<MessageOfBullet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfBullet> _parser = new pb::MessageParser<MessageOfBullet>(() => new MessageOfBullet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfBullet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBullet()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBullet(MessageOfBullet other) : this()
    {
      type_ = other.type_;
      x_ = other.x_;
      y_ = other.y_;
      facingDirection_ = other.facingDirection_;
      damage_ = other.damage_;
      teamId_ = other.teamId_;
      guid_ = other.guid_;
      bombRange_ = other.bombRange_;
      speed_ = other.speed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBullet Clone()
    {
      return new MessageOfBullet(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Protobuf.BulletType type_ = global::Protobuf.BulletType.NullBulletType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BulletType Type
    {
      get { return type_; }
      set
      {
        type_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "facing_direction" field.</summary>
    public const int FacingDirectionFieldNumber = 4;
    private double facingDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FacingDirection
    {
      get { return facingDirection_; }
      set
      {
        facingDirection_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 5;
    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Damage
    {
      get { return damage_; }
      set
      {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 6;
    private long teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId
    {
      get { return teamId_; }
      set
      {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 7;
    private long guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Guid
    {
      get { return guid_; }
      set
      {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "bomb_range" field.</summary>
    public const int BombRangeFieldNumber = 8;
    private double bombRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BombRange
    {
      get { return bombRange_; }
      set
      {
        bombRange_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 9;
    private int speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Speed
    {
      get { return speed_; }
      set
      {
        speed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfBullet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfBullet other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Type != other.Type) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FacingDirection, other.FacingDirection)) return false;
      if (Damage != other.Damage) return false;
      if (TeamId != other.TeamId) return false;
      if (Guid != other.Guid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BombRange, other.BombRange)) return false;
      if (Speed != other.Speed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (Type != global::Protobuf.BulletType.NullBulletType) hash ^= Type.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (FacingDirection != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FacingDirection);
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      if (Guid != 0L) hash ^= Guid.GetHashCode();
      if (BombRange != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BombRange);
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (Type != global::Protobuf.BulletType.NullBulletType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (FacingDirection != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(FacingDirection);
      }
      if (Damage != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Damage);
      }
      if (TeamId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TeamId);
      }
      if (Guid != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Guid);
      }
      if (BombRange != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(BombRange);
      }
      if (Speed != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (Type != global::Protobuf.BulletType.NullBulletType)
      {
        output.WriteRawTag(8);
        output.WriteEnum((int)Type);
      }
      if (X != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (FacingDirection != 0D)
      {
        output.WriteRawTag(33);
        output.WriteDouble(FacingDirection);
      }
      if (Damage != 0)
      {
        output.WriteRawTag(40);
        output.WriteInt32(Damage);
      }
      if (TeamId != 0L)
      {
        output.WriteRawTag(48);
        output.WriteInt64(TeamId);
      }
      if (Guid != 0L)
      {
        output.WriteRawTag(56);
        output.WriteInt64(Guid);
      }
      if (BombRange != 0D)
      {
        output.WriteRawTag(65);
        output.WriteDouble(BombRange);
      }
      if (Speed != 0)
      {
        output.WriteRawTag(72);
        output.WriteInt32(Speed);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (Type != global::Protobuf.BulletType.NullBulletType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
      }
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (FacingDirection != 0D)
      {
        size += 1 + 8;
      }
      if (Damage != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (TeamId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (Guid != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Guid);
      }
      if (BombRange != 0D)
      {
        size += 1 + 8;
      }
      if (Speed != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfBullet other)
    {
      if (other == null)
      {
        return;
      }
      if (other.Type != global::Protobuf.BulletType.NullBulletType)
      {
        Type = other.Type;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.FacingDirection != 0D)
      {
        FacingDirection = other.FacingDirection;
      }
      if (other.Damage != 0)
      {
        Damage = other.Damage;
      }
      if (other.TeamId != 0L)
      {
        TeamId = other.TeamId;
      }
      if (other.Guid != 0L)
      {
        Guid = other.Guid;
      }
      if (other.BombRange != 0D)
      {
        BombRange = other.BombRange;
      }
      if (other.Speed != 0)
      {
        Speed = other.Speed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Protobuf.BulletType) input.ReadEnum();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 33: {
            FacingDirection = input.ReadDouble();
            break;
          }
          case 40: {
            Damage = input.ReadInt32();
            break;
          }
          case 48: {
            TeamId = input.ReadInt64();
            break;
          }
          case 56: {
            Guid = input.ReadInt64();
            break;
          }
          case 65: {
            BombRange = input.ReadDouble();
            break;
          }
          case 72: {
            Speed = input.ReadInt32();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              Type = (global::Protobuf.BulletType)input.ReadEnum();
              break;
            }
          case 16:
            {
              X = input.ReadInt32();
              break;
            }
          case 24:
            {
              Y = input.ReadInt32();
              break;
            }
          case 33:
            {
              FacingDirection = input.ReadDouble();
              break;
            }
          case 40:
            {
              Damage = input.ReadInt32();
              break;
            }
          case 48:
            {
              TeamId = input.ReadInt64();
              break;
            }
          case 56:
            {
              Guid = input.ReadInt64();
              break;
            }
          case 65:
            {
              BombRange = input.ReadDouble();
              break;
            }
          case 72:
            {
              Speed = input.ReadInt32();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfBombedBullet : pb::IMessage<MessageOfBombedBullet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfBombedBullet> _parser = new pb::MessageParser<MessageOfBombedBullet>(() => new MessageOfBombedBullet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfBombedBullet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBombedBullet()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBombedBullet(MessageOfBombedBullet other) : this()
    {
      type_ = other.type_;
      x_ = other.x_;
      y_ = other.y_;
      facingDirection_ = other.facingDirection_;
      mappingId_ = other.mappingId_;
      bombRange_ = other.bombRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfBombedBullet Clone()
    {
      return new MessageOfBombedBullet(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Protobuf.BulletType type_ = global::Protobuf.BulletType.NullBulletType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.BulletType Type
    {
      get { return type_; }
      set
      {
        type_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "facing_direction" field.</summary>
    public const int FacingDirectionFieldNumber = 4;
    private double facingDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FacingDirection
    {
      get { return facingDirection_; }
      set
      {
        facingDirection_ = value;
      }
    }

    /// <summary>Field number for the "mapping_id" field.</summary>
    public const int MappingIdFieldNumber = 5;
    private long mappingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MappingId
    {
      get { return mappingId_; }
      set
      {
        mappingId_ = value;
      }
    }

    /// <summary>Field number for the "bomb_range" field.</summary>
    public const int BombRangeFieldNumber = 6;
    private double bombRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BombRange
    {
      get { return bombRange_; }
      set
      {
        bombRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfBombedBullet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfBombedBullet other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Type != other.Type) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FacingDirection, other.FacingDirection)) return false;
      if (MappingId != other.MappingId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BombRange, other.BombRange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (Type != global::Protobuf.BulletType.NullBulletType) hash ^= Type.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (FacingDirection != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FacingDirection);
      if (MappingId != 0L) hash ^= MappingId.GetHashCode();
      if (BombRange != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BombRange);
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (Type != global::Protobuf.BulletType.NullBulletType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (FacingDirection != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(FacingDirection);
      }
      if (MappingId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MappingId);
      }
      if (BombRange != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(BombRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (Type != global::Protobuf.BulletType.NullBulletType)
      {
        output.WriteRawTag(8);
        output.WriteEnum((int)Type);
      }
      if (X != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (FacingDirection != 0D)
      {
        output.WriteRawTag(33);
        output.WriteDouble(FacingDirection);
      }
      if (MappingId != 0L)
      {
        output.WriteRawTag(40);
        output.WriteInt64(MappingId);
      }
      if (BombRange != 0D)
      {
        output.WriteRawTag(49);
        output.WriteDouble(BombRange);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (Type != global::Protobuf.BulletType.NullBulletType)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Type);
      }
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (FacingDirection != 0D)
      {
        size += 1 + 8;
      }
      if (MappingId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MappingId);
      }
      if (BombRange != 0D)
      {
        size += 1 + 8;
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfBombedBullet other)
    {
      if (other == null)
      {
        return;
      }
      if (other.Type != global::Protobuf.BulletType.NullBulletType)
      {
        Type = other.Type;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.FacingDirection != 0D)
      {
        FacingDirection = other.FacingDirection;
      }
      if (other.MappingId != 0L)
      {
        MappingId = other.MappingId;
      }
      if (other.BombRange != 0D)
      {
        BombRange = other.BombRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Protobuf.BulletType) input.ReadEnum();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 33: {
            FacingDirection = input.ReadDouble();
            break;
          }
          case 40: {
            MappingId = input.ReadInt64();
            break;
          }
          case 49: {
            BombRange = input.ReadDouble();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              Type = (global::Protobuf.BulletType)input.ReadEnum();
              break;
            }
          case 16:
            {
              X = input.ReadInt32();
              break;
            }
          case 24:
            {
              Y = input.ReadInt32();
              break;
            }
          case 33:
            {
              FacingDirection = input.ReadDouble();
              break;
            }
          case 40:
            {
              MappingId = input.ReadInt64();
              break;
            }
          case 49:
            {
              BombRange = input.ReadDouble();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfFactory : pb::IMessage<MessageOfFactory>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfFactory> _parser = new pb::MessageParser<MessageOfFactory>(() => new MessageOfFactory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfFactory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfFactory()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfFactory(MessageOfFactory other) : this()
    {
      x_ = other.x_;
      y_ = other.y_;
      hp_ = other.hp_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfFactory Clone()
    {
      return new MessageOfFactory(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    /// <summary>
    /// 剩余的血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp
    {
      get { return hp_; }
      set
      {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 4;
    private long teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId
    {
      get { return teamId_; }
      set
      {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfFactory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfFactory other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Hp != other.Hp) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (TeamId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (X != 0)
      {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (TeamId != 0L)
      {
        output.WriteRawTag(32);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Hp != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (TeamId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfFactory other)
    {
      if (other == null)
      {
        return;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.Hp != 0)
      {
        Hp = other.Hp;
      }
      if (other.TeamId != 0L)
      {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            TeamId = input.ReadInt64();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              X = input.ReadInt32();
              break;
            }
          case 16:
            {
              Y = input.ReadInt32();
              break;
            }
          case 24:
            {
              Hp = input.ReadInt32();
              break;
            }
          case 32:
            {
              TeamId = input.ReadInt64();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfCommunity : pb::IMessage<MessageOfCommunity>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfCommunity> _parser = new pb::MessageParser<MessageOfCommunity>(() => new MessageOfCommunity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfCommunity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfCommunity()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfCommunity(MessageOfCommunity other) : this()
    {
      x_ = other.x_;
      y_ = other.y_;
      hp_ = other.hp_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfCommunity Clone()
    {
      return new MessageOfCommunity(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    /// <summary>
    /// 剩余的血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp
    {
      get { return hp_; }
      set
      {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 4;
    private long teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId
    {
      get { return teamId_; }
      set
      {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfCommunity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfCommunity other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Hp != other.Hp) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (TeamId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (X != 0)
      {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (TeamId != 0L)
      {
        output.WriteRawTag(32);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Hp != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (TeamId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfCommunity other)
    {
      if (other == null)
      {
        return;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.Hp != 0)
      {
        Hp = other.Hp;
      }
      if (other.TeamId != 0L)
      {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            TeamId = input.ReadInt64();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              X = input.ReadInt32();
              break;
            }
          case 16:
            {
              Y = input.ReadInt32();
              break;
            }
          case 24:
            {
              Hp = input.ReadInt32();
              break;
            }
          case 32:
            {
              TeamId = input.ReadInt64();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfFort : pb::IMessage<MessageOfFort>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfFort> _parser = new pb::MessageParser<MessageOfFort>(() => new MessageOfFort());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfFort> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfFort()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfFort(MessageOfFort other) : this()
    {
      x_ = other.x_;
      y_ = other.y_;
      hp_ = other.hp_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfFort Clone()
    {
      return new MessageOfFort(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    /// <summary>
    /// 剩余的血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp
    {
      get { return hp_; }
      set
      {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 4;
    private long teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId
    {
      get { return teamId_; }
      set
      {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfFort);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfFort other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Hp != other.Hp) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (TeamId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (X != 0)
      {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (TeamId != 0L)
      {
        output.WriteRawTag(32);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Hp != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (TeamId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfFort other)
    {
      if (other == null)
      {
        return;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.Hp != 0)
      {
        Hp = other.Hp;
      }
      if (other.TeamId != 0L)
      {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            TeamId = input.ReadInt64();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              X = input.ReadInt32();
              break;
            }
          case 16:
            {
              Y = input.ReadInt32();
              break;
            }
          case 24:
            {
              Hp = input.ReadInt32();
              break;
            }
          case 32:
            {
              TeamId = input.ReadInt64();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfWormhole : pb::IMessage<MessageOfWormhole>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfWormhole> _parser = new pb::MessageParser<MessageOfWormhole>(() => new MessageOfWormhole());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfWormhole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfWormhole()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfWormhole(MessageOfWormhole other) : this()
    {
      x_ = other.x_;
      y_ = other.y_;
      hp_ = other.hp_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfWormhole Clone()
    {
      return new MessageOfWormhole(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    /// <summary>
    /// 剩余的血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp
    {
      get { return hp_; }
      set
      {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id
    {
      get { return id_; }
      set
      {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfWormhole);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfWormhole other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Hp != other.Hp) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (Id != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (X != 0)
      {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (Id != 0)
      {
        output.WriteRawTag(32);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Hp != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Id != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfWormhole other)
    {
      if (other == null)
      {
        return;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.Hp != 0)
      {
        Hp = other.Hp;
      }
      if (other.Id != 0)
      {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              X = input.ReadInt32();
              break;
            }
          case 16:
            {
              Y = input.ReadInt32();
              break;
            }
          case 24:
            {
              Hp = input.ReadInt32();
              break;
            }
          case 32:
            {
              Id = input.ReadInt32();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfResource : pb::IMessage<MessageOfResource>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfResource> _parser = new pb::MessageParser<MessageOfResource>(() => new MessageOfResource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfResource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfResource()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfResource(MessageOfResource other) : this()
    {
      x_ = other.x_;
      y_ = other.y_;
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfResource Clone()
    {
      return new MessageOfResource(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 3;
    private int progress_;
    /// <summary>
    /// 采集进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Progress
    {
      get { return progress_; }
      set
      {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfResource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfResource other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Progress != other.Progress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Progress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (X != 0)
      {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Progress != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Progress);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Progress != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfResource other)
    {
      if (other == null)
      {
        return;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.Progress != 0)
      {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Progress = input.ReadInt32();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              X = input.ReadInt32();
              break;
            }
          case 16:
            {
              Y = input.ReadInt32();
              break;
            }
          case 24:
            {
              Progress = input.ReadInt32();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfHome : pb::IMessage<MessageOfHome>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfHome> _parser = new pb::MessageParser<MessageOfHome>(() => new MessageOfHome());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfHome> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfHome()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfHome(MessageOfHome other) : this()
    {
      x_ = other.x_;
      y_ = other.y_;
      hp_ = other.hp_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfHome Clone()
    {
      return new MessageOfHome(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X
    {
      get { return x_; }
      set
      {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y
    {
      get { return y_; }
      set
      {
        y_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp
    {
      get { return hp_; }
      set
      {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 4;
    private long teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId
    {
      get { return teamId_; }
      set
      {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfHome);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfHome other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Hp != other.Hp) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (TeamId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (X != 0)
      {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Hp != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (TeamId != 0L)
      {
        output.WriteRawTag(32);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (X != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Hp != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (TeamId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfHome other)
    {
      if (other == null)
      {
        return;
      }
      if (other.X != 0)
      {
        X = other.X;
      }
      if (other.Y != 0)
      {
        Y = other.Y;
      }
      if (other.Hp != 0)
      {
        Hp = other.Hp;
      }
      if (other.TeamId != 0L)
      {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            TeamId = input.ReadInt64();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              X = input.ReadInt32();
              break;
            }
          case 16:
            {
              Y = input.ReadInt32();
              break;
            }
          case 24:
            {
              Hp = input.ReadInt32();
              break;
            }
          case 32:
            {
              TeamId = input.ReadInt64();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfMap : pb::IMessage<MessageOfMap>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfMap> _parser = new pb::MessageParser<MessageOfMap>(() => new MessageOfMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfMap()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfMap(MessageOfMap other) : this()
    {
      height_ = other.height_;
      width_ = other.width_;
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfMap Clone()
    {
      return new MessageOfMap(this);
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 1;
    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height
    {
      get { return height_; }
      set
      {
        height_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width
    {
      get { return width_; }
      set
      {
        width_ = value;
      }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Protobuf.MessageOfMap.Types.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(26, global::Protobuf.MessageOfMap.Types.Row.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.MessageOfMap.Types.Row> rows_ = new pbc::RepeatedField<global::Protobuf.MessageOfMap.Types.Row>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.MessageOfMap.Types.Row> Rows
    {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfMap other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Height != other.Height) return false;
      if (Width != other.Width) return false;
      if (!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (Height != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Height);
      }
      if (Width != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Width);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (Height != 0)
      {
        output.WriteRawTag(8);
        output.WriteUInt32(Height);
      }
      if (Width != 0)
      {
        output.WriteRawTag(16);
        output.WriteUInt32(Width);
      }
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (Height != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (Width != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfMap other)
    {
      if (other == null)
      {
        return;
      }
      if (other.Height != 0)
      {
        Height = other.Height;
      }
      if (other.Width != 0)
      {
        Width = other.Width;
      }
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Height = input.ReadUInt32();
            break;
          }
          case 16: {
            Width = input.ReadUInt32();
            break;
          }
          case 26: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              Height = input.ReadUInt32();
              break;
            }
          case 16:
            {
              Width = input.ReadUInt32();
              break;
            }
          case 26:
            {
              rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
              break;
            }
        }
      }
    }
#endif

    #region Nested types
    /// <summary>Container for nested types declared in the MessageOfMap message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types
    {
      public sealed partial class Row : pb::IMessage<Row>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
#endif
      {
        private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Row> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
          get { return global::Protobuf.MessageOfMap.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row()
        {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row(Row other) : this()
        {
          cols_ = other.cols_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Row Clone()
        {
          return new Row(this);
        }

        /// <summary>Field number for the "cols" field.</summary>
        public const int ColsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Protobuf.PlaceType> _repeated_cols_codec
            = pb::FieldCodec.ForEnum(10, x => (int)x, x => (global::Protobuf.PlaceType)x);
        private readonly pbc::RepeatedField<global::Protobuf.PlaceType> cols_ = new pbc::RepeatedField<global::Protobuf.PlaceType>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protobuf.PlaceType> Cols
        {
          get { return cols_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
          return Equals(other as Row);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Row other)
        {
          if (ReferenceEquals(other, null))
          {
            return false;
          }
          if (ReferenceEquals(other, this))
          {
            return true;
          }
          if (!cols_.Equals(other.cols_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
          int hash = 1;
          hash ^= cols_.GetHashCode();
          if (_unknownFields != null)
          {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
#else
          cols_.WriteTo(output, _repeated_cols_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
        {
          cols_.WriteTo(ref output, _repeated_cols_codec);
          if (_unknownFields != null)
          {
            _unknownFields.WriteTo(ref output);
          }
        }
#endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
          int size = 0;
          size += cols_.CalculateSize(_repeated_cols_codec);
          if (_unknownFields != null)
          {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Row other)
        {
          if (other == null)
          {
            return;
          }
          cols_.Add(other.cols_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
#else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                cols_.AddEntriesFrom(input, _repeated_cols_codec);
                break;
              }
            }
          }
#endif
        }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
        {
          uint tag;
          while ((tag = input.ReadTag()) != 0)
          {
            switch (tag)
            {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8:
                {
                  cols_.AddEntriesFrom(ref input, _repeated_cols_codec);
                  break;
                }
            }
          }
        }
#endif

      }

    }
    #endregion

  }

  public sealed partial class MessageOfTeam : pb::IMessage<MessageOfTeam>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfTeam> _parser = new pb::MessageParser<MessageOfTeam>(() => new MessageOfTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfTeam()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfTeam(MessageOfTeam other) : this()
    {
      teamId_ = other.teamId_;
      playerId_ = other.playerId_;
      score_ = other.score_;
      energy_ = other.energy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfTeam Clone()
    {
      return new MessageOfTeam(this);
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 1;
    private long teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId
    {
      get { return teamId_; }
      set
      {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId
    {
      get { return playerId_; }
      set
      {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score
    {
      get { return score_; }
      set
      {
        score_ = value;
      }
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 4;
    private long energy_;
    /// <summary>
    ///    int64 guid=5;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Energy
    {
      get { return energy_; }
      set
      {
        energy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfTeam other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (TeamId != other.TeamId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Score != other.Score) return false;
      if (Energy != other.Energy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (Energy != 0L) hash ^= Energy.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (TeamId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TeamId);
      }
      if (PlayerId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PlayerId);
      }
      if (Score != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Score);
      }
      if (Energy != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Energy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (TeamId != 0L)
      {
        output.WriteRawTag(8);
        output.WriteInt64(TeamId);
      }
      if (PlayerId != 0L)
      {
        output.WriteRawTag(16);
        output.WriteInt64(PlayerId);
      }
      if (Score != 0L)
      {
        output.WriteRawTag(24);
        output.WriteInt64(Score);
      }
      if (Energy != 0L)
      {
        output.WriteRawTag(32);
        output.WriteInt64(Energy);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (TeamId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (PlayerId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (Score != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (Energy != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Energy);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfTeam other)
    {
      if (other == null)
      {
        return;
      }
      if (other.TeamId != 0L)
      {
        TeamId = other.TeamId;
      }
      if (other.PlayerId != 0L)
      {
        PlayerId = other.PlayerId;
      }
      if (other.Score != 0L)
      {
        Score = other.Score;
      }
      if (other.Energy != 0L)
      {
        Energy = other.Energy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamId = input.ReadInt64();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 24: {
            Score = input.ReadInt64();
            break;
          }
          case 32: {
            Energy = input.ReadInt64();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              TeamId = input.ReadInt64();
              break;
            }
          case 16:
            {
              PlayerId = input.ReadInt64();
              break;
            }
          case 24:
            {
              Score = input.ReadInt64();
              break;
            }
          case 32:
            {
              Energy = input.ReadInt64();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfObj : pb::IMessage<MessageOfObj>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfObj> _parser = new pb::MessageParser<MessageOfObj>(() => new MessageOfObj());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfObj> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfObj()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfObj(MessageOfObj other) : this()
    {
      switch (other.MessageOfObjCase)
      {
        case MessageOfObjOneofCase.ShipMessage:
          ShipMessage = other.ShipMessage.Clone();
          break;
        case MessageOfObjOneofCase.BulletMessage:
          BulletMessage = other.BulletMessage.Clone();
          break;
        case MessageOfObjOneofCase.FactoryMessage:
          FactoryMessage = other.FactoryMessage.Clone();
          break;
        case MessageOfObjOneofCase.CommunityMessage:
          CommunityMessage = other.CommunityMessage.Clone();
          break;
        case MessageOfObjOneofCase.FortMessage:
          FortMessage = other.FortMessage.Clone();
          break;
        case MessageOfObjOneofCase.WormholeMessage:
          WormholeMessage = other.WormholeMessage.Clone();
          break;
        case MessageOfObjOneofCase.HomeMessage:
          HomeMessage = other.HomeMessage.Clone();
          break;
        case MessageOfObjOneofCase.ResourceMessage:
          ResourceMessage = other.ResourceMessage.Clone();
          break;
        case MessageOfObjOneofCase.MapMessage:
          MapMessage = other.MapMessage.Clone();
          break;
        case MessageOfObjOneofCase.NewsMessage:
          NewsMessage = other.NewsMessage.Clone();
          break;
        case MessageOfObjOneofCase.BombedBulletMessage:
          BombedBulletMessage = other.BombedBulletMessage.Clone();
          break;
        case MessageOfObjOneofCase.TeamMessage:
          TeamMessage = other.TeamMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfObj Clone()
    {
      return new MessageOfObj(this);
    }

    /// <summary>Field number for the "ship_message" field.</summary>
    public const int ShipMessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfShip ShipMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage ? (global::Protobuf.MessageOfShip)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.ShipMessage;
      }
    }

    /// <summary>Field number for the "bullet_message" field.</summary>
    public const int BulletMessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfBullet BulletMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage ? (global::Protobuf.MessageOfBullet)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.BulletMessage;
      }
    }

    /// <summary>Field number for the "factory_message" field.</summary>
    public const int FactoryMessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfFactory FactoryMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.FactoryMessage ? (global::Protobuf.MessageOfFactory)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.FactoryMessage;
      }
    }

    /// <summary>Field number for the "community_message" field.</summary>
    public const int CommunityMessageFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfCommunity CommunityMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.CommunityMessage ? (global::Protobuf.MessageOfCommunity)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.CommunityMessage;
      }
    }

    /// <summary>Field number for the "fort_message" field.</summary>
    public const int FortMessageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfFort FortMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.FortMessage ? (global::Protobuf.MessageOfFort)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.FortMessage;
      }
    }

    /// <summary>Field number for the "wormhole_message" field.</summary>
    public const int WormholeMessageFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfWormhole WormholeMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.WormholeMessage ? (global::Protobuf.MessageOfWormhole)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.WormholeMessage;
      }
    }

    /// <summary>Field number for the "home_message" field.</summary>
    public const int HomeMessageFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfHome HomeMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage ? (global::Protobuf.MessageOfHome)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.HomeMessage;
      }
    }

    /// <summary>Field number for the "resource_message" field.</summary>
    public const int ResourceMessageFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfResource ResourceMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage ? (global::Protobuf.MessageOfResource)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.ResourceMessage;
      }
    }

    /// <summary>Field number for the "map_message" field.</summary>
    public const int MapMessageFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfMap MapMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.MapMessage ? (global::Protobuf.MessageOfMap)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.MapMessage;
      }
    }

    /// <summary>Field number for the "news_message" field.</summary>
    public const int NewsMessageFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfNews NewsMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.NewsMessage ? (global::Protobuf.MessageOfNews)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.NewsMessage;
      }
    }

    /// <summary>Field number for the "bombed_bullet_message" field.</summary>
    public const int BombedBulletMessageFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfBombedBullet BombedBulletMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.BombedBulletMessage ? (global::Protobuf.MessageOfBombedBullet)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.BombedBulletMessage;
      }
    }

    /// <summary>Field number for the "team_message" field.</summary>
    public const int TeamMessageFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfTeam TeamMessage
    {
      get { return messageOfObjCase_ == MessageOfObjOneofCase.TeamMessage ? (global::Protobuf.MessageOfTeam)messageOfObj_ : null; }
      set
      {
        messageOfObj_ = value;
        messageOfObjCase_ = value == null ? MessageOfObjOneofCase.None : MessageOfObjOneofCase.TeamMessage;
      }
    }

    private object messageOfObj_;
    /// <summary>Enum of possible cases for the "message_of_obj" oneof.</summary>
    public enum MessageOfObjOneofCase
    {
      None = 0,
      ShipMessage = 1,
      BulletMessage = 2,
      FactoryMessage = 3,
      CommunityMessage = 4,
      FortMessage = 5,
      WormholeMessage = 6,
      HomeMessage = 7,
      ResourceMessage = 8,
      MapMessage = 9,
      NewsMessage = 10,
      BombedBulletMessage = 11,
      TeamMessage = 12,
    }
    private MessageOfObjOneofCase messageOfObjCase_ = MessageOfObjOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfObjOneofCase MessageOfObjCase
    {
      get { return messageOfObjCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageOfObj()
    {
      messageOfObjCase_ = MessageOfObjOneofCase.None;
      messageOfObj_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfObj);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfObj other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!object.Equals(ShipMessage, other.ShipMessage)) return false;
      if (!object.Equals(BulletMessage, other.BulletMessage)) return false;
      if (!object.Equals(FactoryMessage, other.FactoryMessage)) return false;
      if (!object.Equals(CommunityMessage, other.CommunityMessage)) return false;
      if (!object.Equals(FortMessage, other.FortMessage)) return false;
      if (!object.Equals(WormholeMessage, other.WormholeMessage)) return false;
      if (!object.Equals(HomeMessage, other.HomeMessage)) return false;
      if (!object.Equals(ResourceMessage, other.ResourceMessage)) return false;
      if (!object.Equals(MapMessage, other.MapMessage)) return false;
      if (!object.Equals(NewsMessage, other.NewsMessage)) return false;
      if (!object.Equals(BombedBulletMessage, other.BombedBulletMessage)) return false;
      if (!object.Equals(TeamMessage, other.TeamMessage)) return false;
      if (MessageOfObjCase != other.MessageOfObjCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) hash ^= ShipMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) hash ^= BulletMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.FactoryMessage) hash ^= FactoryMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.CommunityMessage) hash ^= CommunityMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.FortMessage) hash ^= FortMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.WormholeMessage) hash ^= WormholeMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) hash ^= HomeMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) hash ^= ResourceMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) hash ^= MapMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.NewsMessage) hash ^= NewsMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.BombedBulletMessage) hash ^= BombedBulletMessage.GetHashCode();
      if (messageOfObjCase_ == MessageOfObjOneofCase.TeamMessage) hash ^= TeamMessage.GetHashCode();
      hash ^= (int)messageOfObjCase_;
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(ShipMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(BulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.FactoryMessage) {
        output.WriteRawTag(26);
        output.WriteMessage(FactoryMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.CommunityMessage) {
        output.WriteRawTag(34);
        output.WriteMessage(CommunityMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.FortMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(FortMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.WormholeMessage) {
        output.WriteRawTag(50);
        output.WriteMessage(WormholeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) {
        output.WriteRawTag(58);
        output.WriteMessage(HomeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) {
        output.WriteRawTag(66);
        output.WriteMessage(ResourceMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) {
        output.WriteRawTag(74);
        output.WriteMessage(MapMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.NewsMessage) {
        output.WriteRawTag(82);
        output.WriteMessage(NewsMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BombedBulletMessage) {
        output.WriteRawTag(90);
        output.WriteMessage(BombedBulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.TeamMessage) {
        output.WriteRawTag(98);
        output.WriteMessage(TeamMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage)
      {
        output.WriteRawTag(10);
        output.WriteMessage(ShipMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage)
      {
        output.WriteRawTag(18);
        output.WriteMessage(BulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.FactoryMessage)
      {
        output.WriteRawTag(26);
        output.WriteMessage(FactoryMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.CommunityMessage)
      {
        output.WriteRawTag(34);
        output.WriteMessage(CommunityMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.FortMessage)
      {
        output.WriteRawTag(42);
        output.WriteMessage(FortMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.WormholeMessage)
      {
        output.WriteRawTag(50);
        output.WriteMessage(WormholeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage)
      {
        output.WriteRawTag(58);
        output.WriteMessage(HomeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage)
      {
        output.WriteRawTag(66);
        output.WriteMessage(ResourceMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage)
      {
        output.WriteRawTag(74);
        output.WriteMessage(MapMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.NewsMessage)
      {
        output.WriteRawTag(82);
        output.WriteMessage(NewsMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BombedBulletMessage)
      {
        output.WriteRawTag(90);
        output.WriteMessage(BombedBulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.TeamMessage)
      {
        output.WriteRawTag(98);
        output.WriteMessage(TeamMessage);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShipMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.FactoryMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FactoryMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.CommunityMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommunityMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.FortMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FortMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.WormholeMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WormholeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HomeMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResourceMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.NewsMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewsMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.BombedBulletMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BombedBulletMessage);
      }
      if (messageOfObjCase_ == MessageOfObjOneofCase.TeamMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TeamMessage);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfObj other)
    {
      if (other == null)
      {
        return;
      }
      switch (other.MessageOfObjCase)
      {
        case MessageOfObjOneofCase.ShipMessage:
          if (ShipMessage == null)
          {
            ShipMessage = new global::Protobuf.MessageOfShip();
          }
          ShipMessage.MergeFrom(other.ShipMessage);
          break;
        case MessageOfObjOneofCase.BulletMessage:
          if (BulletMessage == null)
          {
            BulletMessage = new global::Protobuf.MessageOfBullet();
          }
          BulletMessage.MergeFrom(other.BulletMessage);
          break;
        case MessageOfObjOneofCase.FactoryMessage:
          if (FactoryMessage == null)
          {
            FactoryMessage = new global::Protobuf.MessageOfFactory();
          }
          FactoryMessage.MergeFrom(other.FactoryMessage);
          break;
        case MessageOfObjOneofCase.CommunityMessage:
          if (CommunityMessage == null)
          {
            CommunityMessage = new global::Protobuf.MessageOfCommunity();
          }
          CommunityMessage.MergeFrom(other.CommunityMessage);
          break;
        case MessageOfObjOneofCase.FortMessage:
          if (FortMessage == null)
          {
            FortMessage = new global::Protobuf.MessageOfFort();
          }
          FortMessage.MergeFrom(other.FortMessage);
          break;
        case MessageOfObjOneofCase.WormholeMessage:
          if (WormholeMessage == null)
          {
            WormholeMessage = new global::Protobuf.MessageOfWormhole();
          }
          WormholeMessage.MergeFrom(other.WormholeMessage);
          break;
        case MessageOfObjOneofCase.HomeMessage:
          if (HomeMessage == null)
          {
            HomeMessage = new global::Protobuf.MessageOfHome();
          }
          HomeMessage.MergeFrom(other.HomeMessage);
          break;
        case MessageOfObjOneofCase.ResourceMessage:
          if (ResourceMessage == null)
          {
            ResourceMessage = new global::Protobuf.MessageOfResource();
          }
          ResourceMessage.MergeFrom(other.ResourceMessage);
          break;
        case MessageOfObjOneofCase.MapMessage:
          if (MapMessage == null)
          {
            MapMessage = new global::Protobuf.MessageOfMap();
          }
          MapMessage.MergeFrom(other.MapMessage);
          break;
        case MessageOfObjOneofCase.NewsMessage:
          if (NewsMessage == null)
          {
            NewsMessage = new global::Protobuf.MessageOfNews();
          }
          NewsMessage.MergeFrom(other.NewsMessage);
          break;
        case MessageOfObjOneofCase.BombedBulletMessage:
          if (BombedBulletMessage == null)
          {
            BombedBulletMessage = new global::Protobuf.MessageOfBombedBullet();
          }
          BombedBulletMessage.MergeFrom(other.BombedBulletMessage);
          break;
        case MessageOfObjOneofCase.TeamMessage:
          if (TeamMessage == null)
          {
            TeamMessage = new global::Protobuf.MessageOfTeam();
          }
          TeamMessage.MergeFrom(other.TeamMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Protobuf.MessageOfShip subBuilder = new global::Protobuf.MessageOfShip();
            if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage) {
              subBuilder.MergeFrom(ShipMessage);
            }
            input.ReadMessage(subBuilder);
            ShipMessage = subBuilder;
            break;
          }
          case 18: {
            global::Protobuf.MessageOfBullet subBuilder = new global::Protobuf.MessageOfBullet();
            if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage) {
              subBuilder.MergeFrom(BulletMessage);
            }
            input.ReadMessage(subBuilder);
            BulletMessage = subBuilder;
            break;
          }
          case 26: {
            global::Protobuf.MessageOfFactory subBuilder = new global::Protobuf.MessageOfFactory();
            if (messageOfObjCase_ == MessageOfObjOneofCase.FactoryMessage) {
              subBuilder.MergeFrom(FactoryMessage);
            }
            input.ReadMessage(subBuilder);
            FactoryMessage = subBuilder;
            break;
          }
          case 34: {
            global::Protobuf.MessageOfCommunity subBuilder = new global::Protobuf.MessageOfCommunity();
            if (messageOfObjCase_ == MessageOfObjOneofCase.CommunityMessage) {
              subBuilder.MergeFrom(CommunityMessage);
            }
            input.ReadMessage(subBuilder);
            CommunityMessage = subBuilder;
            break;
          }
          case 42: {
            global::Protobuf.MessageOfFort subBuilder = new global::Protobuf.MessageOfFort();
            if (messageOfObjCase_ == MessageOfObjOneofCase.FortMessage) {
              subBuilder.MergeFrom(FortMessage);
            }
            input.ReadMessage(subBuilder);
            FortMessage = subBuilder;
            break;
          }
          case 50: {
            global::Protobuf.MessageOfWormhole subBuilder = new global::Protobuf.MessageOfWormhole();
            if (messageOfObjCase_ == MessageOfObjOneofCase.WormholeMessage) {
              subBuilder.MergeFrom(WormholeMessage);
            }
            input.ReadMessage(subBuilder);
            WormholeMessage = subBuilder;
            break;
          }
          case 58: {
            global::Protobuf.MessageOfHome subBuilder = new global::Protobuf.MessageOfHome();
            if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage) {
              subBuilder.MergeFrom(HomeMessage);
            }
            input.ReadMessage(subBuilder);
            HomeMessage = subBuilder;
            break;
          }
          case 66: {
            global::Protobuf.MessageOfResource subBuilder = new global::Protobuf.MessageOfResource();
            if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage) {
              subBuilder.MergeFrom(ResourceMessage);
            }
            input.ReadMessage(subBuilder);
            ResourceMessage = subBuilder;
            break;
          }
          case 74: {
            global::Protobuf.MessageOfMap subBuilder = new global::Protobuf.MessageOfMap();
            if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage) {
              subBuilder.MergeFrom(MapMessage);
            }
            input.ReadMessage(subBuilder);
            MapMessage = subBuilder;
            break;
          }
          case 82: {
            global::Protobuf.MessageOfNews subBuilder = new global::Protobuf.MessageOfNews();
            if (messageOfObjCase_ == MessageOfObjOneofCase.NewsMessage) {
              subBuilder.MergeFrom(NewsMessage);
            }
            input.ReadMessage(subBuilder);
            NewsMessage = subBuilder;
            break;
          }
          case 90: {
            global::Protobuf.MessageOfBombedBullet subBuilder = new global::Protobuf.MessageOfBombedBullet();
            if (messageOfObjCase_ == MessageOfObjOneofCase.BombedBulletMessage) {
              subBuilder.MergeFrom(BombedBulletMessage);
            }
            input.ReadMessage(subBuilder);
            BombedBulletMessage = subBuilder;
            break;
          }
          case 98: {
            global::Protobuf.MessageOfTeam subBuilder = new global::Protobuf.MessageOfTeam();
            if (messageOfObjCase_ == MessageOfObjOneofCase.TeamMessage) {
              subBuilder.MergeFrom(TeamMessage);
            }
            input.ReadMessage(subBuilder);
            TeamMessage = subBuilder;
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              global::Protobuf.MessageOfShip subBuilder = new global::Protobuf.MessageOfShip();
              if (messageOfObjCase_ == MessageOfObjOneofCase.ShipMessage)
              {
                subBuilder.MergeFrom(ShipMessage);
              }
              input.ReadMessage(subBuilder);
              ShipMessage = subBuilder;
              break;
            }
          case 18:
            {
              global::Protobuf.MessageOfBullet subBuilder = new global::Protobuf.MessageOfBullet();
              if (messageOfObjCase_ == MessageOfObjOneofCase.BulletMessage)
              {
                subBuilder.MergeFrom(BulletMessage);
              }
              input.ReadMessage(subBuilder);
              BulletMessage = subBuilder;
              break;
            }
          case 26:
            {
              global::Protobuf.MessageOfFactory subBuilder = new global::Protobuf.MessageOfFactory();
              if (messageOfObjCase_ == MessageOfObjOneofCase.FactoryMessage)
              {
                subBuilder.MergeFrom(FactoryMessage);
              }
              input.ReadMessage(subBuilder);
              FactoryMessage = subBuilder;
              break;
            }
          case 34:
            {
              global::Protobuf.MessageOfCommunity subBuilder = new global::Protobuf.MessageOfCommunity();
              if (messageOfObjCase_ == MessageOfObjOneofCase.CommunityMessage)
              {
                subBuilder.MergeFrom(CommunityMessage);
              }
              input.ReadMessage(subBuilder);
              CommunityMessage = subBuilder;
              break;
            }
          case 42:
            {
              global::Protobuf.MessageOfFort subBuilder = new global::Protobuf.MessageOfFort();
              if (messageOfObjCase_ == MessageOfObjOneofCase.FortMessage)
              {
                subBuilder.MergeFrom(FortMessage);
              }
              input.ReadMessage(subBuilder);
              FortMessage = subBuilder;
              break;
            }
          case 50:
            {
              global::Protobuf.MessageOfWormhole subBuilder = new global::Protobuf.MessageOfWormhole();
              if (messageOfObjCase_ == MessageOfObjOneofCase.WormholeMessage)
              {
                subBuilder.MergeFrom(WormholeMessage);
              }
              input.ReadMessage(subBuilder);
              WormholeMessage = subBuilder;
              break;
            }
          case 58:
            {
              global::Protobuf.MessageOfHome subBuilder = new global::Protobuf.MessageOfHome();
              if (messageOfObjCase_ == MessageOfObjOneofCase.HomeMessage)
              {
                subBuilder.MergeFrom(HomeMessage);
              }
              input.ReadMessage(subBuilder);
              HomeMessage = subBuilder;
              break;
            }
          case 66:
            {
              global::Protobuf.MessageOfResource subBuilder = new global::Protobuf.MessageOfResource();
              if (messageOfObjCase_ == MessageOfObjOneofCase.ResourceMessage)
              {
                subBuilder.MergeFrom(ResourceMessage);
              }
              input.ReadMessage(subBuilder);
              ResourceMessage = subBuilder;
              break;
            }
          case 74:
            {
              global::Protobuf.MessageOfMap subBuilder = new global::Protobuf.MessageOfMap();
              if (messageOfObjCase_ == MessageOfObjOneofCase.MapMessage)
              {
                subBuilder.MergeFrom(MapMessage);
              }
              input.ReadMessage(subBuilder);
              MapMessage = subBuilder;
              break;
            }
          case 82:
            {
              global::Protobuf.MessageOfNews subBuilder = new global::Protobuf.MessageOfNews();
              if (messageOfObjCase_ == MessageOfObjOneofCase.NewsMessage)
              {
                subBuilder.MergeFrom(NewsMessage);
              }
              input.ReadMessage(subBuilder);
              NewsMessage = subBuilder;
              break;
            }
          case 90:
            {
              global::Protobuf.MessageOfBombedBullet subBuilder = new global::Protobuf.MessageOfBombedBullet();
              if (messageOfObjCase_ == MessageOfObjOneofCase.BombedBulletMessage)
              {
                subBuilder.MergeFrom(BombedBulletMessage);
              }
              input.ReadMessage(subBuilder);
              BombedBulletMessage = subBuilder;
              break;
            }
          case 98:
            {
              global::Protobuf.MessageOfTeam subBuilder = new global::Protobuf.MessageOfTeam();
              if (messageOfObjCase_ == MessageOfObjOneofCase.TeamMessage)
              {
                subBuilder.MergeFrom(TeamMessage);
              }
              input.ReadMessage(subBuilder);
              TeamMessage = subBuilder;
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfAll : pb::IMessage<MessageOfAll>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfAll> _parser = new pb::MessageParser<MessageOfAll>(() => new MessageOfAll());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfAll> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfAll()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfAll(MessageOfAll other) : this()
    {
      gameTime_ = other.gameTime_;
      redTeamScore_ = other.redTeamScore_;
      blueTeamScore_ = other.blueTeamScore_;
      redTeamEnergy_ = other.redTeamEnergy_;
      blueTeamEnergy_ = other.blueTeamEnergy_;
      redHomeHp_ = other.redHomeHp_;
      blueHomeHp_ = other.blueHomeHp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfAll Clone()
    {
      return new MessageOfAll(this);
    }

    /// <summary>Field number for the "game_time" field.</summary>
    public const int GameTimeFieldNumber = 1;
    private int gameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameTime
    {
      get { return gameTime_; }
      set
      {
        gameTime_ = value;
      }
    }

    /// <summary>Field number for the "red_team_score" field.</summary>
    public const int RedTeamScoreFieldNumber = 2;
    private int redTeamScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedTeamScore
    {
      get { return redTeamScore_; }
      set
      {
        redTeamScore_ = value;
      }
    }

    /// <summary>Field number for the "blue_team_score" field.</summary>
    public const int BlueTeamScoreFieldNumber = 3;
    private int blueTeamScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlueTeamScore
    {
      get { return blueTeamScore_; }
      set
      {
        blueTeamScore_ = value;
      }
    }

    /// <summary>Field number for the "red_team_energy" field.</summary>
    public const int RedTeamEnergyFieldNumber = 4;
    private int redTeamEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedTeamEnergy
    {
      get { return redTeamEnergy_; }
      set
      {
        redTeamEnergy_ = value;
      }
    }

    /// <summary>Field number for the "blue_team_energy" field.</summary>
    public const int BlueTeamEnergyFieldNumber = 5;
    private int blueTeamEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlueTeamEnergy
    {
      get { return blueTeamEnergy_; }
      set
      {
        blueTeamEnergy_ = value;
      }
    }

    /// <summary>Field number for the "red_home_hp" field.</summary>
    public const int RedHomeHpFieldNumber = 6;
    private int redHomeHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedHomeHp
    {
      get { return redHomeHp_; }
      set
      {
        redHomeHp_ = value;
      }
    }

    /// <summary>Field number for the "blue_home_hp" field.</summary>
    public const int BlueHomeHpFieldNumber = 7;
    private int blueHomeHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlueHomeHp
    {
      get { return blueHomeHp_; }
      set
      {
        blueHomeHp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfAll);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfAll other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (GameTime != other.GameTime) return false;
      if (RedTeamScore != other.RedTeamScore) return false;
      if (BlueTeamScore != other.BlueTeamScore) return false;
      if (RedTeamEnergy != other.RedTeamEnergy) return false;
      if (BlueTeamEnergy != other.BlueTeamEnergy) return false;
      if (RedHomeHp != other.RedHomeHp) return false;
      if (BlueHomeHp != other.BlueHomeHp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (GameTime != 0) hash ^= GameTime.GetHashCode();
      if (RedTeamScore != 0) hash ^= RedTeamScore.GetHashCode();
      if (BlueTeamScore != 0) hash ^= BlueTeamScore.GetHashCode();
      if (RedTeamEnergy != 0) hash ^= RedTeamEnergy.GetHashCode();
      if (BlueTeamEnergy != 0) hash ^= BlueTeamEnergy.GetHashCode();
      if (RedHomeHp != 0) hash ^= RedHomeHp.GetHashCode();
      if (BlueHomeHp != 0) hash ^= BlueHomeHp.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (GameTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameTime);
      }
      if (RedTeamScore != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RedTeamScore);
      }
      if (BlueTeamScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlueTeamScore);
      }
      if (RedTeamEnergy != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RedTeamEnergy);
      }
      if (BlueTeamEnergy != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BlueTeamEnergy);
      }
      if (RedHomeHp != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RedHomeHp);
      }
      if (BlueHomeHp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BlueHomeHp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (GameTime != 0)
      {
        output.WriteRawTag(8);
        output.WriteInt32(GameTime);
      }
      if (RedTeamScore != 0)
      {
        output.WriteRawTag(16);
        output.WriteInt32(RedTeamScore);
      }
      if (BlueTeamScore != 0)
      {
        output.WriteRawTag(24);
        output.WriteInt32(BlueTeamScore);
      }
      if (RedTeamEnergy != 0)
      {
        output.WriteRawTag(32);
        output.WriteInt32(RedTeamEnergy);
      }
      if (BlueTeamEnergy != 0)
      {
        output.WriteRawTag(40);
        output.WriteInt32(BlueTeamEnergy);
      }
      if (RedHomeHp != 0)
      {
        output.WriteRawTag(48);
        output.WriteInt32(RedHomeHp);
      }
      if (BlueHomeHp != 0)
      {
        output.WriteRawTag(56);
        output.WriteInt32(BlueHomeHp);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (GameTime != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTime);
      }
      if (RedTeamScore != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedTeamScore);
      }
      if (BlueTeamScore != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlueTeamScore);
      }
      if (RedTeamEnergy != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedTeamEnergy);
      }
      if (BlueTeamEnergy != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlueTeamEnergy);
      }
      if (RedHomeHp != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedHomeHp);
      }
      if (BlueHomeHp != 0)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlueHomeHp);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfAll other)
    {
      if (other == null)
      {
        return;
      }
      if (other.GameTime != 0)
      {
        GameTime = other.GameTime;
      }
      if (other.RedTeamScore != 0)
      {
        RedTeamScore = other.RedTeamScore;
      }
      if (other.BlueTeamScore != 0)
      {
        BlueTeamScore = other.BlueTeamScore;
      }
      if (other.RedTeamEnergy != 0)
      {
        RedTeamEnergy = other.RedTeamEnergy;
      }
      if (other.BlueTeamEnergy != 0)
      {
        BlueTeamEnergy = other.BlueTeamEnergy;
      }
      if (other.RedHomeHp != 0)
      {
        RedHomeHp = other.RedHomeHp;
      }
      if (other.BlueHomeHp != 0)
      {
        BlueHomeHp = other.BlueHomeHp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameTime = input.ReadInt32();
            break;
          }
          case 16: {
            RedTeamScore = input.ReadInt32();
            break;
          }
          case 24: {
            BlueTeamScore = input.ReadInt32();
            break;
          }
          case 32: {
            RedTeamEnergy = input.ReadInt32();
            break;
          }
          case 40: {
            BlueTeamEnergy = input.ReadInt32();
            break;
          }
          case 48: {
            RedHomeHp = input.ReadInt32();
            break;
          }
          case 56: {
            BlueHomeHp = input.ReadInt32();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              GameTime = input.ReadInt32();
              break;
            }
          case 16:
            {
              RedTeamScore = input.ReadInt32();
              break;
            }
          case 24:
            {
              BlueTeamScore = input.ReadInt32();
              break;
            }
          case 32:
            {
              RedTeamEnergy = input.ReadInt32();
              break;
            }
          case 40:
            {
              BlueTeamEnergy = input.ReadInt32();
              break;
            }
          case 48:
            {
              RedHomeHp = input.ReadInt32();
              break;
            }
          case 56:
            {
              BlueHomeHp = input.ReadInt32();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageToClient : pb::IMessage<MessageToClient>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageToClient> _parser = new pb::MessageParser<MessageToClient>(() => new MessageToClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageToClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient(MessageToClient other) : this()
    {
      objMessage_ = other.objMessage_.Clone();
      gameState_ = other.gameState_;
      allMessage_ = other.allMessage_ != null ? other.allMessage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageToClient Clone()
    {
      return new MessageToClient(this);
    }

    /// <summary>Field number for the "obj_message" field.</summary>
    public const int ObjMessageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protobuf.MessageOfObj> _repeated_objMessage_codec
        = pb::FieldCodec.ForMessage(10, global::Protobuf.MessageOfObj.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.MessageOfObj> objMessage_ = new pbc::RepeatedField<global::Protobuf.MessageOfObj>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.MessageOfObj> ObjMessage
    {
      get { return objMessage_; }
    }

    /// <summary>Field number for the "game_state" field.</summary>
    public const int GameStateFieldNumber = 2;
    private global::Protobuf.GameState gameState_ = global::Protobuf.GameState.NullGameState;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.GameState GameState
    {
      get { return gameState_; }
      set
      {
        gameState_ = value;
      }
    }

    /// <summary>Field number for the "all_message" field.</summary>
    public const int AllMessageFieldNumber = 3;
    private global::Protobuf.MessageOfAll allMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protobuf.MessageOfAll AllMessage
    {
      get { return allMessage_; }
      set
      {
        allMessage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageToClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageToClient other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!objMessage_.Equals(other.objMessage_)) return false;
      if (GameState != other.GameState) return false;
      if (!object.Equals(AllMessage, other.AllMessage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      hash ^= objMessage_.GetHashCode();
      if (GameState != global::Protobuf.GameState.NullGameState) hash ^= GameState.GetHashCode();
      if (allMessage_ != null) hash ^= AllMessage.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      objMessage_.WriteTo(output, _repeated_objMessage_codec);
      if (GameState != global::Protobuf.GameState.NullGameState) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GameState);
      }
      if (allMessage_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AllMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      objMessage_.WriteTo(ref output, _repeated_objMessage_codec);
      if (GameState != global::Protobuf.GameState.NullGameState)
      {
        output.WriteRawTag(16);
        output.WriteEnum((int)GameState);
      }
      if (allMessage_ != null)
      {
        output.WriteRawTag(26);
        output.WriteMessage(AllMessage);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      size += objMessage_.CalculateSize(_repeated_objMessage_codec);
      if (GameState != global::Protobuf.GameState.NullGameState)
      {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)GameState);
      }
      if (allMessage_ != null)
      {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllMessage);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageToClient other)
    {
      if (other == null)
      {
        return;
      }
      objMessage_.Add(other.objMessage_);
      if (other.GameState != global::Protobuf.GameState.NullGameState)
      {
        GameState = other.GameState;
      }
      if (other.allMessage_ != null)
      {
        if (allMessage_ == null)
        {
          AllMessage = new global::Protobuf.MessageOfAll();
        }
        AllMessage.MergeFrom(other.AllMessage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objMessage_.AddEntriesFrom(input, _repeated_objMessage_codec);
            break;
          }
          case 16: {
            GameState = (global::Protobuf.GameState) input.ReadEnum();
            break;
          }
          case 26: {
            if (allMessage_ == null) {
              AllMessage = new global::Protobuf.MessageOfAll();
            }
            input.ReadMessage(AllMessage);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              objMessage_.AddEntriesFrom(ref input, _repeated_objMessage_codec);
              break;
            }
          case 16:
            {
              GameState = (global::Protobuf.GameState)input.ReadEnum();
              break;
            }
          case 26:
            {
              if (allMessage_ == null)
              {
                AllMessage = new global::Protobuf.MessageOfAll();
              }
              input.ReadMessage(AllMessage);
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MoveRes : pb::IMessage<MoveRes>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MoveRes> _parser = new pb::MessageParser<MoveRes>(() => new MoveRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRes()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRes(MoveRes other) : this()
    {
      actualSpeed_ = other.actualSpeed_;
      actualAngle_ = other.actualAngle_;
      actSuccess_ = other.actSuccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveRes Clone()
    {
      return new MoveRes(this);
    }

    /// <summary>Field number for the "actual_speed" field.</summary>
    public const int ActualSpeedFieldNumber = 1;
    private long actualSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActualSpeed
    {
      get { return actualSpeed_; }
      set
      {
        actualSpeed_ = value;
      }
    }

    /// <summary>Field number for the "actual_angle" field.</summary>
    public const int ActualAngleFieldNumber = 2;
    private double actualAngle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ActualAngle
    {
      get { return actualAngle_; }
      set
      {
        actualAngle_ = value;
      }
    }

    /// <summary>Field number for the "act_success" field.</summary>
    public const int ActSuccessFieldNumber = 3;
    private bool actSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ActSuccess
    {
      get { return actSuccess_; }
      set
      {
        actSuccess_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MoveRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveRes other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (ActualSpeed != other.ActualSpeed) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ActualAngle, other.ActualAngle)) return false;
      if (ActSuccess != other.ActSuccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (ActualSpeed != 0L) hash ^= ActualSpeed.GetHashCode();
      if (ActualAngle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ActualAngle);
      if (ActSuccess != false) hash ^= ActSuccess.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (ActualSpeed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ActualSpeed);
      }
      if (ActualAngle != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ActualAngle);
      }
      if (ActSuccess != false) {
        output.WriteRawTag(24);
        output.WriteBool(ActSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (ActualSpeed != 0L)
      {
        output.WriteRawTag(8);
        output.WriteInt64(ActualSpeed);
      }
      if (ActualAngle != 0D)
      {
        output.WriteRawTag(17);
        output.WriteDouble(ActualAngle);
      }
      if (ActSuccess != false)
      {
        output.WriteRawTag(24);
        output.WriteBool(ActSuccess);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (ActualSpeed != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActualSpeed);
      }
      if (ActualAngle != 0D)
      {
        size += 1 + 8;
      }
      if (ActSuccess != false)
      {
        size += 1 + 1;
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveRes other)
    {
      if (other == null)
      {
        return;
      }
      if (other.ActualSpeed != 0L)
      {
        ActualSpeed = other.ActualSpeed;
      }
      if (other.ActualAngle != 0D)
      {
        ActualAngle = other.ActualAngle;
      }
      if (other.ActSuccess != false)
      {
        ActSuccess = other.ActSuccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActualSpeed = input.ReadInt64();
            break;
          }
          case 17: {
            ActualAngle = input.ReadDouble();
            break;
          }
          case 24: {
            ActSuccess = input.ReadBool();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              ActualSpeed = input.ReadInt64();
              break;
            }
          case 17:
            {
              ActualAngle = input.ReadDouble();
              break;
            }
          case 24:
            {
              ActSuccess = input.ReadBool();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class BuildShipRes : pb::IMessage<BuildShipRes>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<BuildShipRes> _parser = new pb::MessageParser<BuildShipRes>(() => new BuildShipRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildShipRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShipRes()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShipRes(BuildShipRes other) : this()
    {
      actSuccess_ = other.actSuccess_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildShipRes Clone()
    {
      return new BuildShipRes(this);
    }

    /// <summary>Field number for the "act_success" field.</summary>
    public const int ActSuccessFieldNumber = 1;
    private bool actSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ActSuccess
    {
      get { return actSuccess_; }
      set
      {
        actSuccess_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId
    {
      get { return playerId_; }
      set
      {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as BuildShipRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildShipRes other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (ActSuccess != other.ActSuccess) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (ActSuccess != false) hash ^= ActSuccess.GetHashCode();
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (ActSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(ActSuccess);
      }
      if (PlayerId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (ActSuccess != false)
      {
        output.WriteRawTag(8);
        output.WriteBool(ActSuccess);
      }
      if (PlayerId != 0L)
      {
        output.WriteRawTag(16);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (ActSuccess != false)
      {
        size += 1 + 1;
      }
      if (PlayerId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildShipRes other)
    {
      if (other == null)
      {
        return;
      }
      if (other.ActSuccess != false)
      {
        ActSuccess = other.ActSuccess;
      }
      if (other.PlayerId != 0L)
      {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActSuccess = input.ReadBool();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              ActSuccess = input.ReadBool();
              break;
            }
          case 16:
            {
              PlayerId = input.ReadInt64();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class BoolRes : pb::IMessage<BoolRes>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<BoolRes> _parser = new pb::MessageParser<BoolRes>(() => new BoolRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolRes()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolRes(BoolRes other) : this()
    {
      actSuccess_ = other.actSuccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolRes Clone()
    {
      return new BoolRes(this);
    }

    /// <summary>Field number for the "act_success" field.</summary>
    public const int ActSuccessFieldNumber = 1;
    private bool actSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ActSuccess
    {
      get { return actSuccess_; }
      set
      {
        actSuccess_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as BoolRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolRes other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (ActSuccess != other.ActSuccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (ActSuccess != false) hash ^= ActSuccess.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (ActSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(ActSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (ActSuccess != false)
      {
        output.WriteRawTag(8);
        output.WriteBool(ActSuccess);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (ActSuccess != false)
      {
        size += 1 + 1;
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolRes other)
    {
      if (other == null)
      {
        return;
      }
      if (other.ActSuccess != false)
      {
        ActSuccess = other.ActSuccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActSuccess = input.ReadBool();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              ActSuccess = input.ReadBool();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class ShipInfoRes : pb::IMessage<ShipInfoRes>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<ShipInfoRes> _parser = new pb::MessageParser<ShipInfoRes>(() => new ShipInfoRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShipInfoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipInfoRes()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipInfoRes(ShipInfoRes other) : this()
    {
      shipInfo_ = other.shipInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShipInfoRes Clone()
    {
      return new ShipInfoRes(this);
    }

    /// <summary>Field number for the "ship_info" field.</summary>
    public const int ShipInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protobuf.MessageOfShip> _repeated_shipInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Protobuf.MessageOfShip.Parser);
    private readonly pbc::RepeatedField<global::Protobuf.MessageOfShip> shipInfo_ = new pbc::RepeatedField<global::Protobuf.MessageOfShip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protobuf.MessageOfShip> ShipInfo
    {
      get { return shipInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as ShipInfoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShipInfoRes other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (!shipInfo_.Equals(other.shipInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      hash ^= shipInfo_.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      shipInfo_.WriteTo(output, _repeated_shipInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      shipInfo_.WriteTo(ref output, _repeated_shipInfo_codec);
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      size += shipInfo_.CalculateSize(_repeated_shipInfo_codec);
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShipInfoRes other)
    {
      if (other == null)
      {
        return;
      }
      shipInfo_.Add(other.shipInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shipInfo_.AddEntriesFrom(input, _repeated_shipInfo_codec);
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              shipInfo_.AddEntriesFrom(ref input, _repeated_shipInfo_codec);
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class EcoRes : pb::IMessage<EcoRes>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<EcoRes> _parser = new pb::MessageParser<EcoRes>(() => new EcoRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EcoRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EcoRes()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EcoRes(EcoRes other) : this()
    {
      economy_ = other.economy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EcoRes Clone()
    {
      return new EcoRes(this);
    }

    /// <summary>Field number for the "economy" field.</summary>
    public const int EconomyFieldNumber = 1;
    private long economy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Economy
    {
      get { return economy_; }
      set
      {
        economy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as EcoRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EcoRes other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (Economy != other.Economy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (Economy != 0L) hash ^= Economy.GetHashCode();
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (Economy != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Economy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (Economy != 0L)
      {
        output.WriteRawTag(8);
        output.WriteInt64(Economy);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (Economy != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Economy);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EcoRes other)
    {
      if (other == null)
      {
        return;
      }
      if (other.Economy != 0L)
      {
        Economy = other.Economy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Economy = input.ReadInt64();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8:
            {
              Economy = input.ReadInt64();
              break;
            }
        }
      }
    }
#endif

  }

  public sealed partial class MessageOfNews : pb::IMessage<MessageOfNews>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
#endif
  {
    private static readonly pb::MessageParser<MessageOfNews> _parser = new pb::MessageParser<MessageOfNews>(() => new MessageOfNews());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageOfNews> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor
    {
      get { return global::Protobuf.Message2ClientsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor
    {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfNews()
    {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfNews(MessageOfNews other) : this()
    {
      fromId_ = other.fromId_;
      toId_ = other.toId_;
      teamId_ = other.teamId_;
      switch (other.NewsCase)
      {
        case NewsOneofCase.TextMessage:
          TextMessage = other.TextMessage;
          break;
        case NewsOneofCase.BinaryMessage:
          BinaryMessage = other.BinaryMessage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOfNews Clone()
    {
      return new MessageOfNews(this);
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextMessage
    {
      get { return newsCase_ == NewsOneofCase.TextMessage ? (string)news_ : ""; }
      set
      {
        news_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        newsCase_ = NewsOneofCase.TextMessage;
      }
    }

    /// <summary>Field number for the "binary_message" field.</summary>
    public const int BinaryMessageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BinaryMessage
    {
      get { return newsCase_ == NewsOneofCase.BinaryMessage ? (pb::ByteString)news_ : pb::ByteString.Empty; }
      set
      {
        news_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        newsCase_ = NewsOneofCase.BinaryMessage;
      }
    }

    /// <summary>Field number for the "from_id" field.</summary>
    public const int FromIdFieldNumber = 3;
    private long fromId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FromId
    {
      get { return fromId_; }
      set
      {
        fromId_ = value;
      }
    }

    /// <summary>Field number for the "to_id" field.</summary>
    public const int ToIdFieldNumber = 4;
    private long toId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToId
    {
      get { return toId_; }
      set
      {
        toId_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 5;
    private long teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TeamId
    {
      get { return teamId_; }
      set
      {
        teamId_ = value;
      }
    }

    private object news_;
    /// <summary>Enum of possible cases for the "news" oneof.</summary>
    public enum NewsOneofCase
    {
      None = 0,
      TextMessage = 1,
      BinaryMessage = 2,
    }
    private NewsOneofCase newsCase_ = NewsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewsOneofCase NewsCase
    {
      get { return newsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNews()
    {
      newsCase_ = NewsOneofCase.None;
      news_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other)
    {
      return Equals(other as MessageOfNews);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageOfNews other)
    {
      if (ReferenceEquals(other, null))
      {
        return false;
      }
      if (ReferenceEquals(other, this))
      {
        return true;
      }
      if (TextMessage != other.TextMessage) return false;
      if (BinaryMessage != other.BinaryMessage) return false;
      if (FromId != other.FromId) return false;
      if (ToId != other.ToId) return false;
      if (TeamId != other.TeamId) return false;
      if (NewsCase != other.NewsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode()
    {
      int hash = 1;
      if (newsCase_ == NewsOneofCase.TextMessage) hash ^= TextMessage.GetHashCode();
      if (newsCase_ == NewsOneofCase.BinaryMessage) hash ^= BinaryMessage.GetHashCode();
      if (FromId != 0L) hash ^= FromId.GetHashCode();
      if (ToId != 0L) hash ^= ToId.GetHashCode();
      if (TeamId != 0L) hash ^= TeamId.GetHashCode();
      hash ^= (int)newsCase_;
      if (_unknownFields != null)
      {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString()
    {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
#else
      if (newsCase_ == NewsOneofCase.TextMessage) {
        output.WriteRawTag(10);
        output.WriteString(TextMessage);
      }
      if (newsCase_ == NewsOneofCase.BinaryMessage) {
        output.WriteRawTag(18);
        output.WriteBytes(BinaryMessage);
      }
      if (FromId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FromId);
      }
      if (ToId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ToId);
      }
      if (TeamId != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output)
    {
      if (newsCase_ == NewsOneofCase.TextMessage)
      {
        output.WriteRawTag(10);
        output.WriteString(TextMessage);
      }
      if (newsCase_ == NewsOneofCase.BinaryMessage)
      {
        output.WriteRawTag(18);
        output.WriteBytes(BinaryMessage);
      }
      if (FromId != 0L)
      {
        output.WriteRawTag(24);
        output.WriteInt64(FromId);
      }
      if (ToId != 0L)
      {
        output.WriteRawTag(32);
        output.WriteInt64(ToId);
      }
      if (TeamId != 0L)
      {
        output.WriteRawTag(40);
        output.WriteInt64(TeamId);
      }
      if (_unknownFields != null)
      {
        _unknownFields.WriteTo(ref output);
      }
    }
#endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize()
    {
      int size = 0;
      if (newsCase_ == NewsOneofCase.TextMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (newsCase_ == NewsOneofCase.BinaryMessage)
      {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinaryMessage);
      }
      if (FromId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromId);
      }
      if (ToId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToId);
      }
      if (TeamId != 0L)
      {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamId);
      }
      if (_unknownFields != null)
      {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageOfNews other)
    {
      if (other == null)
      {
        return;
      }
      if (other.FromId != 0L)
      {
        FromId = other.FromId;
      }
      if (other.ToId != 0L)
      {
        ToId = other.ToId;
      }
      if (other.TeamId != 0L)
      {
        TeamId = other.TeamId;
      }
      switch (other.NewsCase)
      {
        case NewsOneofCase.TextMessage:
          TextMessage = other.TextMessage;
          break;
        case NewsOneofCase.BinaryMessage:
          BinaryMessage = other.BinaryMessage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input)
    {
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
#else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TextMessage = input.ReadString();
            break;
          }
          case 18: {
            BinaryMessage = input.ReadBytes();
            break;
          }
          case 24: {
            FromId = input.ReadInt64();
            break;
          }
          case 32: {
            ToId = input.ReadInt64();
            break;
          }
          case 40: {
            TeamId = input.ReadInt64();
            break;
          }
        }
      }
#endif
    }

#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input)
    {
      uint tag;
      while ((tag = input.ReadTag()) != 0)
      {
        switch (tag)
        {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
            {
              TextMessage = input.ReadString();
              break;
            }
          case 18:
            {
              BinaryMessage = input.ReadBytes();
              break;
            }
          case 24:
            {
              FromId = input.ReadInt64();
              break;
            }
          case 32:
            {
              ToId = input.ReadInt64();
              break;
            }
          case 40:
            {
              TeamId = input.ReadInt64();
              break;
            }
        }
      }
    }
#endif

  }

  #endregion

}

#endregion Designer generated code
